plugins {
	id 'java'
	id 'maven-publish'
	id 'eclipse'
	id 'signing'
}

//if (!System.env.NEXUS_REPO_ALL_URL) {
//	plugins {
//		id 'jacoco'
//	}
//} 

java {
	withJavadocJar()
	withSourcesJar()
}

//https://central.sonatype.org/pages/gradle.html

//if (!System.env.NEXUS_REPO_ALL_URL) {
//	jacoco {
//		toolVersion = '0.8.7-SNAPSHOT'
//	}
//}

artifacts {
	archives javadocJar, sourcesJar
}
//signing {
//	sign configurations.archives
//}

javadoc.options {
//	addBooleanOption('-enable-preview', true)
	addStringOption('-release', '15')
}

publishing {
	publications {
		dine(MavenPublication) {
			pom {
				name = 'io.github.feklwi:dine'
				description = 'A Library for creating Directed Graphs as a pure Data Model'
				url = 'https://github.com/dev-felix-1/wein'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						id = 'feklwi'
						name = 'Felix Kleine-Wilde'
						email = 'kleinfhq@gmail.com'
					}
				}
			}
			
			groupId = 'io.github.feklwi'
			artifactId = 'dine'
			version = '1.0.0'
			from components.java
		}
	}

	repositories {
		if (project.hasProperty('maven_local_repo')) {
			println maven_local_repo
			maven {
				url maven_local_repo
			}
		}	 else {
			mavenLocal()
		}
	}
}

repositories {
	if (project.hasProperty('maven_local_repo')) {
		maven {
			url maven_local_repo
		}
	} else {
		mavenLocal()
	}
	if (System.env.NEXUS_REPO_ALL_URL) {
		maven {
			credentials {
				username System.env.NEXUS_USER
				password System.env.NEXUS_PASSWORD
			}
			url = uri(System.env.NEXUS_REPO_ALL_URL)
		}
	} else {
		maven {
			url = uri('https://repo.maven.apache.org/maven2/')
		}
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	}
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testRuntimeOnly  'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

group = 'de.fekl'
version = '1.0.0-SNAPSHOT'
description = 'dine'
java.sourceCompatibility = JavaVersion.VERSION_15

//compileJava {
//	options.compilerArgs += ['--enable-preview']
//}
//compileTestJava {
//	options.compilerArgs += ['--enable-preview']
//}
test {
	useJUnitPlatform{
		includeEngines 'junit-jupiter'
	}
//	jvmArgs(['--enable-preview'])
}
